name: Status Monitor

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  ping-status:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env_name: [preview, production]

    steps:
      - name: Skip probes (domains not active yet)
        run: |
          echo "SKIP_ALL=1" >> $GITHUB_ENV
          echo "TODO: Remove skip once staging and production domains are live"

      - name: Select URL, creds, and bypass token
        id: select
        if: env.SKIP_ALL != '1'
        run: |
          if [ "${{ matrix.env_name }}" = "preview" ]; then
            echo "URL=https://staging.louhen.app/api/status" >> $GITHUB_OUTPUT
            echo "USER=${{ secrets.STATUS_USER_PREVIEW }}" >> $GITHUB_OUTPUT
            echo "PASS=${{ secrets.STATUS_PASS_PREVIEW }}" >> $GITHUB_OUTPUT
            echo "BYPASS=${{ secrets.VERCEL_BYPASS_PREVIEW }}" >> $GITHUB_OUTPUT
          else
            echo "URL=https://www.louhen.app/api/status" >> $GITHUB_OUTPUT
            echo "USER=${{ secrets.STATUS_USER_PROD }}" >> $GITHUB_OUTPUT
            echo "PASS=${{ secrets.STATUS_PASS_PROD }}" >> $GITHUB_OUTPUT
            echo "BYPASS=${{ secrets.VERCEL_BYPASS_PROD }}" >> $GITHUB_OUTPUT
          fi

      - name: Mask secrets
        if: env.SKIP_ALL != '1'
        run: |
          echo "::add-mask::${{ steps.select.outputs.USER }}"
          echo "::add-mask::${{ steps.select.outputs.PASS }}"
          echo "::add-mask::${{ steps.select.outputs.BYPASS }}"

      - name: Build Basic Auth header safely
        id: auth
        if: env.SKIP_ALL != '1'
        run: |
          if [ -z "${{ steps.select.outputs.USER }}" ] || [ -z "${{ steps.select.outputs.PASS }}" ]; then
            echo "Missing STATUS_USER or STATUS_PASS for ${{ matrix.env_name }}"
            exit 1
          fi
          AUTH=$(printf '%s' "${{ steps.select.outputs.USER }}:${{ steps.select.outputs.PASS }}" | base64)
          echo "AUTH_HEADER=Basic $AUTH" >> $GITHUB_ENV
          echo "::add-mask::$AUTH"

      - name: DNS precheck (skip prod if www not live)
        if: env.SKIP_ALL != '1' && matrix.env_name == 'production'
        run: |
          if ! dig +short www.louhen.app | grep -q . ; then
            echo "SKIP_PROD=1" >> $GITHUB_ENV
          fi

      - name: Set Vercel protection-bypass cookie
        if: env.SKIP_ALL != '1' && (matrix.env_name != 'production' || env.SKIP_PROD != '1')
        run: |
          URL="${{ steps.select.outputs.URL }}"
          BYPASS="${{ steps.select.outputs.BYPASS }}"
          if [ -z "$BYPASS" ]; then
            echo "Missing VERCEL_BYPASS token for ${{ matrix.env_name }}"
            exit 1
          fi
          BYPASS_URL="${URL}?x-vercel-set-bypass-cookie=true&x-vercel-protection-bypass=${BYPASS}"
          curl -sS --fail -c jar.txt "$BYPASS_URL"

      - name: Ping /api/status with cookie + Basic Auth
        if: env.SKIP_ALL != '1' && (matrix.env_name != 'production' || env.SKIP_PROD != '1')
        run: |
          echo "Requesting ${{ steps.select.outputs.URL }}"
          curl -sS --fail -b jar.txt -H "Authorization: $AUTH_HEADER" "${{ steps.select.outputs.URL }}"
