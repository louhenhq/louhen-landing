name: CI

on:
  push:
    branches:
      - staging
      - production
  pull_request:
    branches:
      - staging
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/production' }}

jobs:
  policy-guards:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build design tokens
        run: npm run -w @louhen/design-tokens build

      - name: Color policy (fast scan)
        env:
          COLOR_POLICY_MODE: warn
        run: npm run guard:hex

      - name: Color policy (enforce)
        env:
          COLOR_POLICY_MODE: enforce
        run: npm run ci:color-policy

      - name: Upload color policy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: color-policy-report
          path: ci-artifacts/color-policy-report.txt
          if-no-files-found: warn

  build-and-test:
    needs: policy-guards
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      CI: true
      SKIP_LHCI: ${{ vars.SKIP_LHCI }}
      NEXT_PUBLIC_ANALYTICS_DISABLED: '1'
      NEXT_PUBLIC_ANALYTICS_DEBUG: '0'
      NEXT_PUBLIC_ENV: 'ci'
      NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
      NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
      NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
      NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
      PW_HEALTH_PATH: /icon.svg
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        env:
          NODE_ENV: development
        run: npm ci --include=dev

      - name: Build design tokens
        run: npm run -w @louhen/design-tokens build

      - name: Color policy (fast scan)
        env:
          COLOR_POLICY_MODE: warn
        run: npm run guard:hex

      - name: Color policy (enforce)
        env:
          COLOR_POLICY_MODE: enforce
        run: npm run ci:color-policy

      - name: Upload color policy report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: color-policy-report
          path: ci-artifacts/color-policy-report.txt
          if-no-files-found: warn

      - name: Lint
        run: npm run lint
        continue-on-error: false

      - name: Unit tests
        run: npm run test
        continue-on-error: false

      - name: Build
        run: npm run build
        continue-on-error: false


  e2e-tests:
    name: Playwright E2E
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ vars.SKIP_E2E != '1' }}
    env:
      CI: true
      NODE_ENV: production
      TEST_MODE: '1'
      APP_BASE_URL: http://localhost:4311
      NEXT_PUBLIC_SITE_URL: http://localhost:4311
      NEXT_PUBLIC_ENV: 'ci'
      NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
      NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
      NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
      NEXT_PUBLIC_LOCALES: 'en-de,de-de'
      NEXT_PUBLIC_DEFAULT_LOCALE: 'en-de'
      NEXT_PUBLIC_ANALYTICS_DISABLED: '1'
      NEXT_PUBLIC_ANALYTICS_DEBUG: '0'
      NEXT_PUBLIC_METHOD_STICKY_CTA: 'true'
      NEXT_PUBLIC_METHOD_EXIT_NUDGE: 'true'
      NEXT_TELEMETRY_DISABLED: '1'
      DEFAULT_LOCALE: 'en-de'
      BASE_URL: http://localhost:4311
      HCAPTCHA_SECRET: ci-hcaptcha-secret
      WAITLIST_CONFIRM_TTL_DAYS: '7'
      FIREBASE_PROJECT_ID: ci-firebase
      FIREBASE_DB_REGION: eur3
      FIREBASE_ADMIN_SA_B64: eyJwcm9qZWN0X2lkIjoiY2ktZmlyZWJhc2UifQ==
      RESEND_API_KEY: ci-resend-key
      RESEND_FROM: no-reply@ci.louhen.app
      RESEND_REPLY_TO: hello@ci.louhen.app
      STATUS_USER: ci-status
      STATUS_PASS: ci-secret
      SUPPRESSION_SALT: ci-suppression-salt
      EMAIL_TRANSPORT: noop
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        env:
          NODE_ENV: development
        run: npm ci --include=dev

      - name: Build
        run: npm run build:test

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Check Playwright env wiring
        env:
          APP_BASE_URL: http://127.0.0.1:4311
          NEXT_PUBLIC_ENV: 'ci'
          NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
          NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
          NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_LOCALES: 'en-de,de-de'
          NEXT_PUBLIC_DEFAULT_LOCALE: 'en-de'
          NEXT_PUBLIC_ANALYTICS_DISABLED: '0'
          NEXT_PUBLIC_ANALYTICS_DEBUG: '1'
          HCAPTCHA_SECRET: ci-hcaptcha-secret
          WAITLIST_CONFIRM_TTL_DAYS: '7'
          FIREBASE_PROJECT_ID: ci-firebase
          FIREBASE_DB_REGION: eur3
          FIREBASE_ADMIN_SA_B64: eyJwcm9qZWN0X2lkIjoiY2ktZmlyZWJhc2UifQ==
          RESEND_API_KEY: ci-resend-key
          RESEND_FROM: no-reply@ci.louhen.app
          RESEND_REPLY_TO: hello@ci.louhen.app
          STATUS_USER: ci-status
          STATUS_PASS: ci-secret
          SUPPRESSION_SALT: ci-suppression-salt
        run: |
          required_envs=(
            NEXT_PUBLIC_ANALYTICS_DISABLED
            NEXT_PUBLIC_ANALYTICS_DEBUG
            NEXT_PUBLIC_ENV
            NEXT_PUBLIC_SITE_URL
            NEXT_PUBLIC_HCAPTCHA_SITE_KEY
            NEXT_PUBLIC_WAITLIST_URGENCY
            NEXT_PUBLIC_COMMIT_SHA
            NEXT_PUBLIC_LOCALES
            NEXT_PUBLIC_DEFAULT_LOCALE
            APP_BASE_URL
            FIREBASE_PROJECT_ID
            FIREBASE_DB_REGION
            FIREBASE_ADMIN_SA_B64
            RESEND_API_KEY
            RESEND_FROM
            RESEND_REPLY_TO
            HCAPTCHA_SECRET
            WAITLIST_CONFIRM_TTL_DAYS
            STATUS_USER
            STATUS_PASS
            SUPPRESSION_SALT
          )
          for key in "${required_envs[@]}"; do
            if [ -z "${!key+x}" ]; then
              echo "::error::missing $key"
              exit 1
            else
              echo "✅ $key present"
            fi
          done

      - name: E2E tests (Playwright)
        env:
          APP_BASE_URL: http://127.0.0.1:4311
          BASE_URL: http://127.0.0.1:4311
          HOST: 127.0.0.1
          PORT: '4311'
          TEST_E2E_SHORTCIRCUIT: 'true'
          TEST_E2E_BYPASS_TOKEN: e2e-mocked-token
          PLAYWRIGHT_ARTIFACTS_DIR: artifacts/playwright/e2e
          NEXT_PUBLIC_ENV: 'ci'
          NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
          NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
          NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_LOCALES: 'en-de,de-de'
          NEXT_PUBLIC_DEFAULT_LOCALE: 'en-de'
          NEXT_PUBLIC_ANALYTICS_DISABLED: '0'
          NEXT_PUBLIC_ANALYTICS_DEBUG: '1'
          HCAPTCHA_SECRET: ci-hcaptcha-secret
          WAITLIST_CONFIRM_TTL_DAYS: '7'
          FIREBASE_PROJECT_ID: ci-firebase
          FIREBASE_DB_REGION: eur3
          FIREBASE_ADMIN_SA_B64: eyJwcm9qZWN0X2lkIjoiY2ktZmlyZWJhc2UifQ==
          RESEND_API_KEY: ci-resend-key
          RESEND_FROM: no-reply@ci.louhen.app
          RESEND_REPLY_TO: hello@ci.louhen.app
          STATUS_USER: ci-status
          STATUS_PASS: ci-secret
          SUPPRESSION_SALT: ci-suppression-salt
          NODE_ENV: production
          PW_HEALTH_PATH: /icon.svg
        run: |
          DEBUG=pw:webserver,pw:api npm run test:e2e
        continue-on-error: false

      - name: Tail Next.js test server log
        if: always()
        run: |
          if [ -f .next/test-server.log ]; then
            echo 'Last 300 lines from .next/test-server.log'
            tail -n 300 .next/test-server.log
          else
            echo 'No server log found'
          fi

      - name: Accessibility smoke (axe)
        env:
          APP_BASE_URL: http://127.0.0.1:4311
          BASE_URL: http://127.0.0.1:4311
          HOST: 127.0.0.1
          TEST_E2E_SHORTCIRCUIT: 'true'
          TEST_E2E_BYPASS_TOKEN: e2e-mocked-token
          PLAYWRIGHT_ARTIFACTS_DIR: artifacts/playwright/axe
          NEXT_PUBLIC_ENV: 'ci'
          NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
          NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
          NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_ANALYTICS_DISABLED: '0'
          NEXT_PUBLIC_ANALYTICS_DEBUG: '1'
          HCAPTCHA_SECRET: ci-hcaptcha-secret
          WAITLIST_CONFIRM_TTL_DAYS: '7'
          FIREBASE_PROJECT_ID: ci-firebase
          FIREBASE_DB_REGION: eur3
          FIREBASE_ADMIN_SA_B64: eyJwcm9qZWN0X2lkIjoiY2ktZmlyZWJhc2UifQ==
          RESEND_API_KEY: ci-resend-key
          RESEND_FROM: no-reply@ci.louhen.app
          RESEND_REPLY_TO: hello@ci.louhen.app
          STATUS_USER: ci-status
          STATUS_PASS: ci-secret
          SUPPRESSION_SALT: ci-suppression-salt
          NODE_ENV: production
          PW_HEALTH_PATH: /icon.svg
        run: |
          IS_PRELAUNCH=true npm run test:axe
        continue-on-error: false

      - name: Upload accessibility artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-axe
          path: artifacts/playwright/axe/
          if-no-files-found: ignore

      - name: Lighthouse (LHCI)
        timeout-minutes: 10
        env:
          BASE_URL: http://127.0.0.1:4311
        run: npm run lighthouse
        continue-on-error: false

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            artifacts/playwright
            .next/test-server.log
          if-no-files-found: warn

      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: artifacts/lighthouse/
          if-no-files-found: ignore

      - name: Append CI summary
        if: always()
        run: |
          if [ -n "${GITHUB_STEP_SUMMARY:-}" ]; then
            {
              echo '### CI Artifacts';
              echo '';
              echo '- Playwright reports: `artifacts/playwright/` (open `e2e/html/index.html` or `axe/html/index.html`)';
              echo '- Lighthouse summary: `artifacts/lighthouse/summary.md`';
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload Next.js traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-server-log
          path: server.log
          if-no-files-found: ignore


  e2e-fallback:
    needs: build-and-test
    if: needs.build-and-test.result == 'failure'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: true
      NEXT_PUBLIC_ANALYTICS_DISABLED: '1'
      NEXT_PUBLIC_ANALYTICS_DEBUG: '0'
      NEXT_PUBLIC_ENV: 'ci'
      NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
      NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
      NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
      NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
      HOST: 127.0.0.1
      PORT: '4311'
      PW_HEALTH_PATH: /icon.svg
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Build
        run: npm run build

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Start fallback Next.js server
        env:
          PORT: '4311'
          HOST: 127.0.0.1
          PW_HEALTH_PATH: /icon.svg
        run: |
          mkdir -p .next
          PORT=${PORT:-4311}
          HOST=${HOST:-127.0.0.1}
          HEALTH_PATH=${PW_HEALTH_PATH:-/}
          echo "Using host $HOST and port $PORT"
          npm run start:test &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> "$GITHUB_ENV"
          echo "HOST=$HOST" >> "$GITHUB_ENV"
          echo "PORT=$PORT" >> "$GITHUB_ENV"
          echo "PW_HEALTH_PATH=$HEALTH_PATH" >> "$GITHUB_ENV"
          started=0
          for i in {1..120}; do
            if curl -fsS "http://$HOST:$PORT${HEALTH_PATH}" >/dev/null 2>&1; then
              started=1
              echo "Server is responding on http://$HOST:$PORT${HEALTH_PATH}"
              break
            fi
            if ! kill -0 "$SERVER_PID" >/dev/null 2>&1; then
              echo "Server process exited early"
              [[ -f .next/test-server.log ]] && cat .next/test-server.log || true
              exit 1
            fi
            sleep 1
          done
          if [ "$started" -ne 1 ]; then
            echo "Server failed to become healthy within 120 seconds"
            [[ -f .next/test-server.log ]] && tail -n 200 .next/test-server.log || true
            exit 1
          fi

      - name: Playwright tests (fallback)
        env:
          APP_BASE_URL: http://127.0.0.1:${{ env.PORT }}
          BASE_URL: http://127.0.0.1:${{ env.PORT }}
          HOST: 127.0.0.1
          PORT: ${{ env.PORT }}
          TEST_E2E_SHORTCIRCUIT: 'true'
          TEST_E2E_BYPASS_TOKEN: e2e-mocked-token
          PLAYWRIGHT_ARTIFACTS_DIR: artifacts/playwright/fallback
          NEXT_PUBLIC_ENV: 'ci'
          NEXT_PUBLIC_SITE_URL: 'https://ci.louhen.app'
          NEXT_PUBLIC_HCAPTCHA_SITE_KEY: '10000000-ffff-ffff-ffff-000000000001'
          NEXT_PUBLIC_WAITLIST_URGENCY: 'true'
          NEXT_PUBLIC_COMMIT_SHA: ${{ github.sha }}
          NEXT_PUBLIC_LOCALES: 'en-de,de-de'
          NEXT_PUBLIC_DEFAULT_LOCALE: 'en-de'
          NEXT_PUBLIC_ANALYTICS_DISABLED: '0'
          NEXT_PUBLIC_ANALYTICS_DEBUG: '1'
          HCAPTCHA_SECRET: ci-hcaptcha-secret
          WAITLIST_CONFIRM_TTL_DAYS: '7'
          FIREBASE_PROJECT_ID: ci-firebase
          FIREBASE_DB_REGION: eur3
          FIREBASE_ADMIN_SA_B64: eyJwcm9qZWN0X2lkIjoiY2ktZmlyZWJhc2UifQ==
          RESEND_API_KEY: ci-resend-key
          RESEND_FROM: no-reply@ci.louhen.app
          RESEND_REPLY_TO: hello@ci.louhen.app
          STATUS_USER: ci-status
          STATUS_PASS: ci-secret
          SUPPRESSION_SALT: ci-suppression-salt
          NODE_ENV: production
          PW_REUSE: '1'
          DEBUG: pw:api
          PW_HEALTH_PATH: /icon.svg
        run: |
          npm run test:e2e

      - name: Tail Next.js test server log (fallback)
        if: always()
        run: |
          if [ -f .next/test-server.log ]; then
            echo 'Last 300 lines from .next/test-server.log'
            tail -n 300 .next/test-server.log
          else
            echo 'No server log found'
          fi

      - name: Upload Playwright artifacts (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts-fallback
          path: |
            artifacts/playwright
            .next/test-server.log
          if-no-files-found: warn

      - name: Stop fallback Next.js server
        if: always()
        run: |
          if [ -n "${SERVER_PID:-}" ]; then
            echo "Stopping server PID ${SERVER_PID}"
            kill "${SERVER_PID}" || true
            wait "${SERVER_PID}" 2>/dev/null || true
          fi


  enforce-release-source:
    # Guard: only allow PRs into production if they originate from staging
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'production'
    runs-on: ubuntu-latest
    steps:
      - name: Fail if head is not staging
        run: |
          if [ "${{ github.event.pull_request.head.ref }}" != "staging" ]; then
            echo "❌ PRs into 'production' must originate from 'staging'."
            exit 1
          fi
          echo "✅ Source branch is 'staging' — release guard passed."

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/production'
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    env:
      CI: true
      NEXT_PUBLIC_ANALYTICS_DISABLED: '1'
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Semantic-release
        run: npx semantic-release --debug
