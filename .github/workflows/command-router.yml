name: Test Command Router

on:
  issue_comment:
    types: [created]

jobs:
  route:
    if: startsWith(github.event.comment.body, '/test') &&
      github.event.issue.pull_request &&
      contains('OWNER,MEMBER,COLLABORATOR', github.event.comment.author_association)
    runs-on: ubuntu-latest
    permissions:
      actions: write
      issues: write
      pull-requests: write
    steps:
      - id: parse
        shell: bash
        run: |
          set -euo pipefail
          body=$(echo "${{ github.event.comment.body }}" | tr '[:upper:]' '[:lower:]')
          body=${body//$'\r'/}
          suite=""
          case "$body" in
            /test\ all*) suite="all" ;;
            /test\ unit*) suite="unit" ;;
            /test\ e2e*) suite="e2e" ;;
            /test\ axe*) suite="axe" ;;
            /test\ lhci*) suite="lighthouse" ;;
          esac
          if [[ -z "$suite" ]]; then
            echo "should-dispatch=false" >> "$GITHUB_OUTPUT"
            echo "suite=" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          echo "should-dispatch=true" >> "$GITHUB_OUTPUT"
          echo "suite=$suite" >> "$GITHUB_OUTPUT"

      - name: Dispatch workflow
        if: steps.parse.outputs.should-dispatch == 'true'
        uses: actions/github-script@v7
        env:
          SUITE: ${{ steps.parse.outputs.suite }}
        with:
          script: |
            const suite = process.env.SUITE;
            const pull = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'run-tests.yml',
              ref: pull.data.head.ref,
              inputs: { suites: suite ?? 'all' },
            });

      - name: Acknowledge command
        if: steps.parse.outputs.should-dispatch == 'true'
        uses: actions/github-script@v7
        env:
          SUITE: ${{ steps.parse.outputs.suite }}
        with:
          script: |
            const suite = process.env.SUITE ?? 'all';
            const message = 'üöÄ Triggered **run-tests.yml** for suite: `' + suite + '`';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message,
            });

      - name: Inform on no-op
        if: steps.parse.outputs.should-dispatch != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.comment.body.trim();
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ö†Ô∏è I didn't recognise \\`${body}\\`. Try one of: /test all, /test unit, /test e2e, /test axe, /test lhci.`
            });
